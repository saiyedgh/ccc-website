{"ast":null,"code":"var _jsxFileName = \"/Users/syedhassan/Desktop/CCC -site/src/components/Carousel.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useRef, useState, useEffect } from 'react';\nimport '../css/Carousel.css';\nimport CarouselControls from './CarouselControls';\nimport CarouselIndicators from './CarouselIndicators';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Carousel = _ref => {\n  _s();\n\n  let {\n    images\n  } = _ref;\n  const [currentImage, setCurrentImage] = useState(0);\n  const carouselInterval = useRef();\n\n  const prev = () => {\n    startCarouselTimer();\n    const index = currentImage > 0 ? currentImage - 1 : images.length - 1;\n    setCurrentImage(index);\n  };\n\n  const next = () => {\n    startCarouselTimer();\n    const index = currentImage < images.length - 1 ? currentImage + 1 : 0;\n    setCurrentImage(index);\n  };\n\n  const switchIndex = index => {\n    startCarouselTimer();\n    setCurrentImage(index);\n  };\n\n  const startCarouselTimer = () => {\n    stopCarouselTimer();\n    carouselInterval.current = setInterval(() => {\n      setCurrentImage(currentImage => currentImage < images.length - 1 ? currentImage + 1 : 0);\n    }, 3000);\n  };\n\n  const stopCarouselTimer = () => {\n    if (carouselInterval.current) {\n      clearInterval(carouselInterval.current);\n    }\n  };\n\n  useEffect(() => {\n    startCarouselTimer();\n    return () => stopCarouselTimer;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"carousel-container\",\n      children: [/*#__PURE__*/_jsxDEV(CarouselControls, {\n        prev: prev,\n        next: next\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"carousel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"carousel-inner\",\n          style: {\n            transform: `translate(${-currentImage * 100}%)`\n          },\n          children: images.map((img, key) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"carousel-item\",\n            onMouseEnter: stopCarouselTimer,\n            onMouseOut: startCarouselTimer,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: img.src,\n              alt: img.alt\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: img.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CarouselIndicators, {\n          images: images,\n          currentIndex: currentImage,\n          switchIndex: switchIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Carousel, \"70uGScW2IrmeW90vkxn6Y31cG6A=\");\n\n_c = Carousel;\nexport default Carousel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carousel\");","map":{"version":3,"sources":["/Users/syedhassan/Desktop/CCC -site/src/components/Carousel.jsx"],"names":["useRef","useState","useEffect","CarouselControls","CarouselIndicators","Carousel","images","currentImage","setCurrentImage","carouselInterval","prev","startCarouselTimer","index","length","next","switchIndex","stopCarouselTimer","current","setInterval","clearInterval","transform","map","img","key","src","alt","title"],"mappings":";;;AAAA;AACA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,QAA4C,OAA5C;AACA,OAAO,qBAAP;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;;;;AAEA,MAAMC,QAAQ,GAAG,QAAc;AAAA;;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAE3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAMQ,gBAAgB,GAAGT,MAAM,EAA/B;;AAEA,QAAMU,IAAI,GAAG,MAAM;AACfC,IAAAA,kBAAkB;AAClB,UAAMC,KAAK,GAAGL,YAAY,GAAG,CAAf,GAAmBA,YAAY,GAAG,CAAlC,GAAsCD,MAAM,CAACO,MAAP,GAAgB,CAApE;AACAL,IAAAA,eAAe,CAACI,KAAD,CAAf;AACH,GAJD;;AAMA,QAAME,IAAI,GAAG,MAAM;AACfH,IAAAA,kBAAkB;AAClB,UAAMC,KAAK,GAAGL,YAAY,GAAGD,MAAM,CAACO,MAAP,GAAgB,CAA/B,GAAmCN,YAAY,GAAG,CAAlD,GAAsD,CAApE;AACAC,IAAAA,eAAe,CAACI,KAAD,CAAf;AACH,GAJD;;AAMA,QAAMG,WAAW,GAAIH,KAAD,IAAW;AAC3BD,IAAAA,kBAAkB;AAClBH,IAAAA,eAAe,CAACI,KAAD,CAAf;AACH,GAHD;;AAKA,QAAMD,kBAAkB,GAAG,MAAM;AAC7BK,IAAAA,iBAAiB;AACjBP,IAAAA,gBAAgB,CAACQ,OAAjB,GAA2BC,WAAW,CAAC,MAAM;AACzCV,MAAAA,eAAe,CAACD,YAAY,IAAIA,YAAY,GAAGD,MAAM,CAACO,MAAP,GAAgB,CAA/B,GAAmCN,YAAY,GAAG,CAAlD,GAAsD,CAAvE,CAAf;AACH,KAFqC,EAEnC,IAFmC,CAAtC;AAGH,GALD;;AAOA,QAAMS,iBAAiB,GAAG,MAAM;AAC5B,QAAIP,gBAAgB,CAACQ,OAArB,EAA8B;AAC1BE,MAAAA,aAAa,CAACV,gBAAgB,CAACQ,OAAlB,CAAb;AACH;AACJ,GAJD;;AAMAf,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,kBAAkB;AAElB,WAAO,MAAMK,iBAAb;AAEH,GALQ,EAKN,EALM,CAAT;AAOA,sBACI;AAAA,2BACA;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACA,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAEN,IAAxB;AAA8B,QAAA,IAAI,EAAEI;AAApC;AAAA;AAAA;AAAA;AAAA,cADA,eAEI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AACI,UAAA,SAAS,EAAC,gBADd;AAEI,UAAA,KAAK,EAAE;AAACM,YAAAA,SAAS,EAAG,aAAY,CAACb,YAAD,GAAiB,GAAI;AAA9C,WAFX;AAAA,oBAIKD,MAAM,CAACe,GAAP,CAAW,CAACC,GAAD,EAAMC,GAAN,kBACR;AAAe,YAAA,SAAS,EAAC,eAAzB;AAAyC,YAAA,YAAY,EAAEP,iBAAvD;AAA0E,YAAA,UAAU,EAAEL,kBAAtF;AAAA,oCACI;AAAK,cAAA,GAAG,EAAEW,GAAG,CAACE,GAAd;AAAmB,cAAA,GAAG,EAAEF,GAAG,CAACG;AAA5B,eAAsCF,GAAtC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA,wBAAID,GAAG,CAACI;AAAR;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAAUH,GAAV;AAAA;AAAA;AAAA;AAAA,kBADH;AAJL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAcI,QAAC,kBAAD;AAAoB,UAAA,MAAM,EAAEjB,MAA5B;AAAoC,UAAA,YAAY,EAAEC,YAAlD;AAAgE,UAAA,WAAW,EAAEQ;AAA7E;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AAuBH,CAjED;;GAAMV,Q;;KAAAA,Q;AAmEN,eAAeA,QAAf","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useRef, useState, useEffect } from 'react';\nimport '../css/Carousel.css';\n\nimport CarouselControls from './CarouselControls';\nimport CarouselIndicators from './CarouselIndicators';\n\nconst Carousel = ({images}) => {\n\n    const [currentImage, setCurrentImage] = useState(0);\n    const carouselInterval = useRef();\n\n    const prev = () => {\n        startCarouselTimer()\n        const index = currentImage > 0 ? currentImage - 1 : images.length - 1\n        setCurrentImage(index)\n    }\n\n    const next = () => {\n        startCarouselTimer()\n        const index = currentImage < images.length - 1 ? currentImage + 1 : 0\n        setCurrentImage(index)\n    }\n\n    const switchIndex = (index) => {\n        startCarouselTimer()\n        setCurrentImage(index)\n    }\n\n    const startCarouselTimer = () => {\n        stopCarouselTimer()\n        carouselInterval.current = setInterval(() => {\n            setCurrentImage(currentImage => currentImage < images.length - 1 ? currentImage + 1 : 0)\n        }, 3000)\n    }\n\n    const stopCarouselTimer = () => {\n        if (carouselInterval.current) {\n            clearInterval(carouselInterval.current)\n        }\n    }\n\n    useEffect(() => {\n        startCarouselTimer();\n\n        return () => stopCarouselTimer;\n\n    }, [])\n\n    return (\n        <>\n        <div className='carousel-container'>\n        <CarouselControls prev={prev} next={next} />\n            <div className='carousel'>\n                <div\n                    className=\"carousel-inner\"\n                    style={{transform: `translate(${-currentImage *  100}%)`}}\n                >\n                    {images.map((img, key) => (\n                        <div key={key} className=\"carousel-item\" onMouseEnter={stopCarouselTimer} onMouseOut={startCarouselTimer}>\n                            <img src={img.src} alt={img.alt} key={key} />\n                            <div className=\"mask\"></div>\n                            <p>{img.title}</p>\n                        </div>\n                    ))}\n                </div>\n\n                <CarouselIndicators images={images} currentIndex={currentImage} switchIndex={switchIndex}/>\n            </div>\n        </div>\n    </>\n    )\n}\n\nexport default Carousel;\n"]},"metadata":{},"sourceType":"module"}